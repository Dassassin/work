1.继承就是子类继承父类的属性和行为，使得子类对象具有与父类相同的属性、相同的行为。子类可以直接 访问父 类中的非私有的属性和行为。作用是提高代码的复用性。
2.通过 extends 关键字，可以声明一个子类继承另外一个父类，定义格式如下：
  class 父类 {
      ...
  }
  class 子类 extends 父类 {
      ...
  }
3.成员变量：如果子类父类中出现不重名的成员变量，这时的访问是没有影响的；子父类中出现了同名的成员变量时，在子类中需要访问父类中非私有成员变量时，需要使用super关键字，修饰父类成员变量。
  成员方法：如果子类父类中出现不重名的成员方法，这时的调用是没有影响的，对象调用方法时，会先在子类中查找有没有对应的方法，若子类中存在就会执行子类中的方法，若子类中不存在就会执行父类中相应的方法；如果子类父类中出现重名的成员方法，这时的访问是一种特殊情况，叫做方法重写(Override)，子类中出现与父类一模一样的方法时（返回值类型，方法名和参数列表都相同），会出现覆盖效果，也称为重写或者复写。声明不变，重新实现。
  构造方法：子类所有构造方法都会调用父类的无参构造。
4.修饰符 abstract 返回值类型 方法名 (参数列表)；
5.抽象类的定义格式如下：
  abstract class 类名 {

  }
  举例：
  public abstract class Person {
      public abstract void run();
  }
6.继承抽象类的子类必须重写父类所有的抽象方法，否则该子类也必须声明为抽象类。必须有子类实现该父类的抽象方法，否则从最初的父类到最终的子类都不能创建对象，失去意义。
  此时的方法重写是子类对父类抽象方法的实现，也叫实现方法。